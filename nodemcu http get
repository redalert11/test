#include <ESP8266WiFi.h>;
#include <ESP8266HTTPClient.h>;
#include <DallasTemperature.h>
#include <OneWire.h>

#define ONE_WIRE_BUS D2                          //D2 pin of nodemcu

OneWire oneWire(ONE_WIRE_BUS);
 
DallasTemperature sensors(&oneWire);            // Pass the oneWire reference to Dallas Temperature.

const char* ssid = "wifi_network";
const char* password = "wifi_password";
float temp1, temp2, temp3; 
void setup () {
 
Serial.begin(115200);
WiFi.begin(ssid, password);
sensors.begin();
 
while (WiFi.status() != WL_CONNECTED) {
 
delay(1000);
Serial.print("Connecting..");
 
}
 
}
 
void loop() {
sensors.requestTemperatures();                // Send the command to get temperatures
  Serial.println("Temperature is: ");
  Serial.println(sensors.getTempCByIndex(0));   // Why "byIndex"? You can have more than one IC on the same bus. 0 refers to the first IC on the wire
  Serial.println(sensors.getTempCByIndex(1));
  Serial.println(sensors.getTempCByIndex(2));
temp1 = sensors.getTempCByIndex(0);
temp2 = sensors.getTempCByIndex(1);
temp3 = sensors.getTempCByIndex(2);
Serial.println(String(temp1) + String(temp2));

if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
 
HTTPClient http;  //Declare an object of class HTTPClient

http.begin("http://192.168.0.174/api/insert.php?temp1=" + String(temp1)+"&temp2="+String(temp2)+"&temp3="+String(temp3));  //Specify request destination
int httpCode = http.GET();                                                                  //Send the request
 
if (httpCode > 0) { //Check the returning code
 
String payload = http.getString();   //Get the request response payload
Serial.println(payload);                     //Print the response payload
 
}
 
http.end();   //Close connection
 
}
 
delay(30000);    //Send a request every 30 seconds
 
}
